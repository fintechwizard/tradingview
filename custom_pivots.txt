//@version=5
indicator('custom_pivots', shorttitle='custom_pivots', overlay=true, max_lines_count=500)
higherTF = input.timeframe('D', title='Pivot Points Timeframe')

booleanInput = input(title='Historical Data', defval=false)
prevCloseHTF = request.security(syminfo.tickerid, higherTF, close[1], lookahead=barmerge.lookahead_on)
prevOpenHTF = request.security(syminfo.tickerid, higherTF, open[1], lookahead=barmerge.lookahead_on)
prevHighHTF = request.security(syminfo.tickerid, higherTF, high[1], lookahead=barmerge.lookahead_on)
prevLowHTF = request.security(syminfo.tickerid, higherTF, low[1], lookahead=barmerge.lookahead_on)
pLevel = (prevHighHTF + prevLowHTF + prevCloseHTF) / 3
r1Level = pLevel + 0.382 * (prevHighHTF - prevLowHTF)
r2Level = pLevel + 0.618 * (prevHighHTF - prevLowHTF)
r3Level = pLevel + 1.000 * (prevHighHTF - prevLowHTF)
s1Level = pLevel - 0.382 * (prevHighHTF - prevLowHTF)
s2Level = pLevel - 0.618 * (prevHighHTF - prevLowHTF)
s3Level = pLevel - 1.000 * (prevHighHTF - prevLowHTF)
var line r1Line = na
var line pLine = na
var line s1Line = na
var line r2Line = na
var line s2Line = na
var line r3Line = na
var line s3Line = na
if pLevel[1] != pLevel
    line.set_x2(r1Line, bar_index)
    line.set_x2(r2Line, bar_index)
    line.set_x2(r3Line, bar_index)
    line.set_x2(pLine, bar_index)
    line.set_x2(s1Line, bar_index)
    line.set_x2(s2Line, bar_index)
    line.set_x2(s3Line, bar_index)
    line.set_extend(r1Line, extend.none)
    line.set_extend(r2Line, extend.none)
    line.set_extend(r3Line, extend.none)
    line.set_extend(pLine, extend.none)
    line.set_extend(s1Line, extend.none)
    line.set_extend(s2Line, extend.none)
    line.set_extend(s3Line, extend.none)
    r1Line := line.new(bar_index, r1Level, bar_index, r1Level, extend=extend.none, color=color.green)
    r2Line := line.new(bar_index, r2Level, bar_index, r2Level, extend=extend.none, color=color.yellow)
    r3Line := line.new(bar_index, r3Level, bar_index, r3Level, extend=extend.none, color=color.orange)
    pLine := line.new(bar_index, pLevel, bar_index, pLevel, width=1, extend=extend.none, color=color.purple)
    s1Line := line.new(bar_index, s1Level, bar_index, s1Level, extend=extend.none, color=color.green)
    s2Line := line.new(bar_index, s2Level, bar_index, s2Level, extend=extend.none, color=color.yellow)
    s3Line := line.new(bar_index, s3Level, bar_index, s3Level, extend=extend.none, color=color.orange)

if not na(pLine) and line.get_x2(pLine) != bar_index
    line.set_x2(r1Line, bar_index)
    line.set_x2(r2Line, bar_index)
    line.set_x2(r3Line, bar_index)
    line.set_x2(pLine, bar_index)
    line.set_x2(s1Line, bar_index)
    line.set_x2(s2Line, bar_index)
    line.set_x2(s3Line, bar_index)
if not booleanInput
    line.new(bar_index, pLevel, bar_index, pLevel)
